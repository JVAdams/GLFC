new <- (mtcars[vec_inter, ] + mtcars11[vec_inter, ])/2
dim(new)
new
dim(mtcars11)
dim(mtcars)
?gdist
??gdist
?dist
library(jvamisc)
tweethead()
install.packages("mboost")
library(mboost)
example(mboost)
install.packages("party")
example(mboost)
example(confint)
?confint
?mboost:::confint
??confint
example(confint.mboost)
library(jvamisc)
tweethead()
library(rvest)
library(magrittr)
# read in the titles
link <- "http://rknights.org/registration/tournaments/all-girls-nationals/pairings/"
look  <-
html(link) %>%
html_nodes("td")
length(look)
dim(look)
class(look)
head(look)
look[[1]]
look
look  <-
html(link) %>%
html_nodes("td") %>%
html_text()
dim(look)
length(look)
class(look)
head(look)
head(look, 30)
m <- matrix(look, ncol=6, byrow=TRUE)
head(m)
dim(m)
df <- as.data.frame(matrix(look, ncol=6, byrow=TRUE))
View(df)
names(df)
df$V1=="Rd"
df[df$V1=="Rd", ]
dim(df)[1][df$V1=="Rd"]
seq(dim(df)[1])[df$V1=="Rd"][1:2]
seq(dim(df)[1])[df$V1=="Rd"][1:2] + c(1, -1)
df <- as.data.frame(matrix(look, ncol=6, byrow=TRUE))
firstgroup <- seq(dim(df)[1])[df$V1=="Rd"][1:2] + c(1, -1)
names(df) <- df[1, ]
df2 <- df[firstgroup[1]:firstgroup[2]], ]
df2 <- df[firstgroup[1]:firstgroup[2], ]
dim(df2)
df2
df[1, ]
unlist(df[1, ])
as.vector(df[1, ])
as.character(df[1, ])
as.character(df[2, ])
apply(df, 2, as.character)
df <- as.data.frame(matrix(look, ncol=6, byrow=TRUE))
df <- apply(df, 2, as.character)
firstgroup <- seq(dim(df)[1])[df$V1=="Rd"][1:2] + c(1, -1)
names(df) <- df[1, ]
df2 <- df[firstgroup[1]:firstgroup[2], ]
df <- as.data.frame(matrix(look, ncol=6, byrow=TRUE))
df <- apply(df, 2, as.character)
firstgroup <- seq(dim(df)[1])[df[, 1]=="Rd"][1:2] + c(1, -1)
names(df) <- df[1, ]
df2 <- df[firstgroup[1]:firstgroup[2], ]
head(df2)
df[1, ]
class(df[1, ])
unlist(df[1, ])
as.character(df[1, ])
df <- as.data.frame(matrix(look, ncol=6, byrow=TRUE))
df <- apply(df, 2, as.character)
firstgroup <- seq(dim(df)[1])[df[, 1]=="Rd"][1:2] + c(1, -1)
names(df) <- as.character(df[1, ])
df2 <- df[firstgroup[1]:firstgroup[2], ]
head(df2)
as.character(df[1, ])
names(df)
class(df)
?as.data.frame
df <- as.data.frame(matrix(look, ncol=6, byrow=TRUE), stringsAsFactors=FALSE)
firstgroup <- seq(dim(df)[1])[df[, 1]=="Rd"][1:2] + c(1, -1)
names(df) <- as.character(df[1, ])
df2 <- df[firstgroup[1]:firstgroup[2], ]
head(df2)
grep("NYP139", paste(df2$White, df2$Black))
df2[grep("NYP139", paste(df2$White, df2$Black)), ]
source('~/.active-rstudio-document', echo=TRUE)
library(jvamisc)
tweethead()
df2[grep("NYP139", paste(df2$White, df2$Black)), ]
strsplit(df2$White, "(")
strsplit(df2$White, "\(")
strsplit(df2$White, "\\(")
namestuff <- strsplit(c(df2$White, df2$Black), "\\(")
name <- lapply(namestuff, "[", 1)
stuff <- lapply(namestuff, "[", 2)
stuff3 <- strsplit(stuff, ",")
stuff
?strsplit
stuff3 <- strsplit(as.character(stuff), ",")
stuff3
namestuff <- strsplit(c(df2$White, df2$Black), "\\(")
name <- lapply(namestuff, "[", 1)
stuff <- lapply(namestuff, "[", 2)
stuff3 <- strsplit(as.character(stuff), ",")
score <- as.numeric(lapply(stuff3, "[", 1))
school <- lapply(stuff3, "[", 2)
rank <- lapply(stuff3, "[", 3)
rank <- substring(rank, 1, nchar(rank)-1)
kids <- data.frame(name, score, school, rank)
head(kids)
name
namestuff[[1]]
namestuff[[1]][1]
namestuff <- strsplit(c(df2$White, df2$Black), "\\(")
name <- sapply(namestuff, "[", 1)
stuff <- sapply(namestuff, "[", 2)
stuff3 <- strsplit(as.character(stuff), ",")
score <- as.numeric(sapply(stuff3, "[", 1))
school <- sapply(stuff3, "[", 2)
rank <- sapply(stuff3, "[", 3)
rank <- substring(rank, 1, nchar(rank)-1)
kids <- data.frame(name, score, school, rank)
head(kids)
summary(kids)
rank <- as.numeric(substring(rank, 1, nchar(rank)-1))
kids <- data.frame(name, score, school, rank)
summary(kids)
kids[is.na(kids$rank), ]
sort(school)
school<"A"
kids <- data.frame(name, score, school, rank)
kids <- kids[!is.na(kids$score), ]
sel <- school < "A"
kids$rank[sel] <- as.numeric(substring(kids$school[sel],
1, nchar(kids$school[sel])-1))
kids$school[sel] <- NA
kids
nchar(kids$school[sel])
kids$school[sel]
?data.frame
namestuff <- strsplit(c(df2$White, df2$Black), "\\(")
name <- sapply(namestuff, "[", 1)
stuff <- sapply(namestuff, "[", 2)
stuff3 <- strsplit(as.character(stuff), ",")
score <- as.numeric(sapply(stuff3, "[", 1))
school <- sapply(stuff3, "[", 2)
rank <- sapply(stuff3, "[", 3)
rank <- as.numeric(substring(rank, 1, nchar(rank)-1))
kids <- data.frame(name, score, school, rank, stringsAsFactors=FALSE)
kids <- kids[!is.na(kids$score), ]
sel <- school < "A"
kids$rank[sel] <- as.numeric(substring(kids$school[sel],
1, nchar(kids$school[sel])-1))
kids$school[sel] <- NA
kids
shouldbe <- kids$school[sel]
shouldbe
sel <- !is.na(school) & school < "A"
shouldbe <- kids$school[sel]
shouldbe
kids <- data.frame(name, score, school, rank, stringsAsFactors=FALSE)
kids <- kids[!is.na(kids$score), ]
sel <- !is.na(school) & school < "A"
shouldbe <- kids$school[sel]
kids$rank[sel] <- as.numeric(substring(shouldbe, 1, nchar(shouldbe)-1))
kids$school[sel] <- NA
kids
kids$rank[sel]
as.numeric(substring(shouldbe, 1, nchar(shouldbe)-1))
library(rvest)
library(magrittr)
# read in the titles
link <- "http://rknights.org/registration/tournaments/all-girls-nationals/pairings/"
look  <-
html(link) %>%
html_nodes("td") %>%
html_text()
df <- as.data.frame(matrix(look, ncol=6, byrow=TRUE), stringsAsFactors=FALSE)
firstgroup <- seq(dim(df)[1])[df[, 1]=="Rd"][1:2] + c(1, -1)
names(df) <- as.character(df[1, ])
df2 <- df[firstgroup[1]:firstgroup[2], ]
df2[grep("NYP139", paste(df2$White, df2$Black)), ]
namestuff <- strsplit(c(df2$White, df2$Black), "\\(")
name <- sapply(namestuff, "[", 1)
stuff <- sapply(namestuff, "[", 2)
stuff3 <- strsplit(as.character(stuff), ",")
score <- as.numeric(sapply(stuff3, "[", 1))
school <- sapply(stuff3, "[", 2)
rank <- sapply(stuff3, "[", 3)
rank <- as.numeric(substring(rank, 1, nchar(rank)-1))
kids <- data.frame(name, score, school, rank, stringsAsFactors=FALSE)
kids <- kids[!is.na(kids$score), ]
sel <- !is.na(school) & school < "A"
shouldbe <- kids$school[sel]
kids$rank[sel] <- as.numeric(substring(shouldbe, 1, nchar(shouldbe)-1))
kids$school[sel] <- NA
kids
kids$rank[sel]
kids[sel, ]
as.numeric(substring(shouldbe, 1, nchar(shouldbe)-1))
kids$rank[sel] <- 432
length(kids$rank[sel])
kids[sel, "rank"]
kids[sel, "rank"] <- 4
kids <- data.frame(name, score, school, rank, stringsAsFactors=FALSE)
kids <- kids[!is.na(kids$score), ]
sel <- !is.na(school) & school < "A"
shouldbe <- kids$school[sel]
kids[sel, "rank"] <- as.numeric(substring(shouldbe, 1, nchar(shouldbe)-1))
kids[sel, "school"] <- NA
kids
kids[kids$school=="NYP139", ]
kids[!is.na(kids$school) & kids$school=="NYP139", ]
hist(kids$rank)
library(TeachingDemos)
dots(kids$rating)
?dots
dots(round(kids$rating, -1))
round(kids$rating, -1)
kids$rating
source('~/.active-rstudio-document', echo=TRUE)
dots(round(kids$rating, -2))
dots(round(kids$rating, -2), col=round(kids$rating/100))
dots(round(kids$rating, -2), col=sch+1)
sch <- !is.na(kids$school) & kids$school=="NYP139"
sch+1
dots(round(kids$rating, -2), col=sch+1)
dots(round(kids$rating, -2), col=sch+1, lwd=sch+1)
dots(round(kids$rating, -2), col=sch+1, lwd=sch+1, cex=sch+1)
dots(100*floor(kids$rating/100), col=sch+1, lwd=sch+1, cex=sch+1)
kids[sch, ]
?dost
?dots
ord <- order(kids$rating)
dots(100*floor(kids$rating[ord]/100),
col=sch[ord]+1, lwd=sch[ord]+1, cex=sch[ord]+1)
a <- dots(100*floor(kids$rating[ord]/100),
col=sch[ord]+1, lwd=sch[ord]+1, cex=sch[ord]+1)
a
mtext(kids$name[sch], at=kids$rating[sch])
mtext(kids$name[sch], at=kids$rating[sch], srt=20)
text(kids$rating[sch], par("usr")[4], kids$name[sch], srt=20)
namestuff <- strsplit(c(df2$White, df2$Black), "\\(")
name <- strsplit(sapply(namestuff, "[", 1), ",")
last <- sapply(name, "[", 1)
first <- sapply(name, "[", 2)
stuff <- sapply(namestuff, "[", 2)
stuff3 <- strsplit(as.character(stuff), ",")
score <- as.numeric(sapply(stuff3, "[", 1))
school <- sapply(stuff3, "[", 2)
rating <- sapply(stuff3, "[", 3)
rating <- as.numeric(substring(rating, 1, nchar(rating)-1))
kids <- data.frame(last, first, score, school, rating, stringsAsFactors=FALSE)
kids <- kids[!is.na(kids$score), ]
sel <- !is.na(school) & school < "A"
shouldbe <- kids$school[sel]
kids[sel, "rating"] <- as.numeric(substring(shouldbe, 1, nchar(shouldbe)-1))
kids[sel, "school"] <- NA
sch <- !is.na(kids$school) & kids$school=="NYP139"
kids[sch, ]
name
par(mar=c(4, 4, 4, 1), las=1, xpd=NA)
dots(100*floor(kids$rating[ord]/100),
col=sch[ord]+1, lwd=sch[ord]+1, cex=sch[ord]+1)
mtext(kids$name[sch], at=kids$rating[sch])
text(kids$rating[sch], par("usr")[4], kids$name[sch], adj=0, srt=20)
?par
par("usr")[4]
text(kids$rating[sch], par("usr")[4], kids$name[sch], srt=20)
kids$rating[sch]
locator()
text(kids$rating[sch], par("usr")[4], kids$first[sch], srt=20)
mtext(kids$first[sch], at=kids$rating[sch])
par(mar=c(4, 4, 2, 1), las=1)
dots(100*floor(kids$rating[ord]/100),
col=sch[ord]+1, lwd=sch[ord]+1, cex=sch[ord]+1,
xlab="Rating", ylab="Competitors")
mtext(kids$first[sch], at=kids$rating[sch])
?dots
par(mar=c(4, 4, 2, 1), las=1)
dots(100*floor(kids$rating[ord]/100),
col=sch[ord]+1, lwd=sch[ord]+1, cex=sch[ord]+1,
lab1="Rating", lab2="Competitors")
mtext(kids$first[sch], at=kids$rating[sch])
dots
# from TeachingDemos package dots() function
sx <- 100*floor(kids$rating[ord]/100)
sy <- unlist(lapply(table(sx), seq))
par(mar=c(4, 4, 2, 1), las=1)
plot(sx, sy, col=sch[ord]+1, lwd=sch[ord]+1, cex=sch[ord]+1,
xlab="Rating", ylab="Competitors")
mtext(kids$first[sch], at=kids$rating[sch])
sx
sy
100*floor(kids$rating[ord]/100)
sx <- 100*floor(kids$rating[ord]/100)
sy <- unlist(lapply(table(sx), seq))
sx
sy
plot(sx, sy)
length(sx)
length(xy)
length(sy)
table(sx)
lapply(table(sx), seq)
summary(sx)
kids$ps <- !is.na(kids$school) & kids$school=="NYP139"
kids2 <- kids[!is.na(kids$rating), ]
kids2 <- kids2[order(kids2$rating), ]
kids[sch, ]
# from TeachingDemos package dots() function
sx <- 100*floor(kids2$rating/100)
sy <- unlist(lapply(table(sx), seq))
par(mar=c(4, 4, 2, 1), las=1)
with(kids2, {
plot(sx, sy, col=ps+1, lwd=ps+1, cex=ps+1, xlab="Rating", ylab="Competitors")
mtext(first[ps], at=rating[ps])
})
kids[kids$ps, ]
kids2[kids2$ps, ]
source('~/.active-rstudio-document', echo=TRUE)
library(rvest)
library(magrittr)
library(TeachingDemos)
# read in the titles
link <- "http://rknights.org/registration/tournaments/all-girls-nationals/pairings/"
look  <-
html(link) %>%
html_nodes("td") %>%
html_text()
df <- as.data.frame(matrix(look, ncol=6, byrow=TRUE), stringsAsFactors=FALSE)
firstgroup <- seq(dim(df)[1])[df[, 1]=="Rd"][1:2] + c(1, -1)
names(df) <- as.character(df[1, ])
df2 <- df[firstgroup[1]:firstgroup[2], ]
df2[grep("NYP139", paste(df2$White, df2$Black)), ]
namestuff <- strsplit(c(df2$White, df2$Black), "\\(")
name <- strsplit(sapply(namestuff, "[", 1), ",")
last <- sapply(name, "[", 1)
first <- sapply(name, "[", 2)
stuff <- sapply(namestuff, "[", 2)
stuff3 <- strsplit(as.character(stuff), ",")
score <- as.numeric(sapply(stuff3, "[", 1))
school <- sapply(stuff3, "[", 2)
rating <- sapply(stuff3, "[", 3)
rating <- as.numeric(substring(rating, 1, nchar(rating)-1))
kids <- data.frame(last, first, score, school, rating, stringsAsFactors=FALSE)
kids <- kids[!is.na(kids$score), ]
sel <- !is.na(school) & school < "A"
shouldbe <- kids$school[sel]
kids[sel, "rating"] <- as.numeric(substring(shouldbe, 1, nchar(shouldbe)-1))
kids[sel, "school"] <- NA
kids$ps <- !is.na(kids$school) & kids$school=="NYP139"
kids2 <- kids[!is.na(kids$rating), ]
kids2 <- kids2[order(kids2$rating), ]
kids2[kids2$ps, ]
# from TeachingDemos package dots() function
sx <- 100*floor(kids2$rating/100)
sy <- unlist(lapply(table(sx), seq))
par(mar=c(4, 4, 2, 1), las=1)
with(kids2, {
plot(sx, sy, col=ps+1, lwd=ps+1, cex=ps+1,
xlab="Rating", ylab="No. of competitors")
mtext(first[ps], at=rating[ps])
})
library(LW1949)
dose <- c(0.0625, 0.125, 0.25, 0.5, 1)
ntested <- rep(8, 5)
nalive <- c(1, 4, 4, 7, 8)
mydat <- dataprep(dose=dose, ntot=ntested, nfx=nalive)
mymat <- as.matrix(mydat)
head(mydat)
library(jvamisc)
tweethead()
install.packages(c("gplots", "Hmisc", "manipulate", "markdown", "mclust"))
Date <- format(seq(as.POSIXct("2014-01-01 01:00"),
as.POSIXct("2015-01-01 00:00"), by="hour"), "%Y-%m-%d %H:%M",
usetz = FALSE)
Flow <- runif(8760, 0, 2300)
IsHigh<- function(x ){
if (x < 1600) return(0)
if (1600 <= x) return(1)
}
isHighFlow = unlist(lapply(Flow, IsHigh))
df = data.frame(Date, Flow, isHighFlow )
temp <- df %>%
mutate(highFlowInterval = cumsum(isHighFlow==0)) %>%
group_by(highFlowInterval) %>%
summarise(hoursHighFlow = n(), minDate = min(as.character(Date)),
maxDate = max(as.character(Date)))
??"%>%"
library(magrittr)
temp <- df %>%
mutate(highFlowInterval = cumsum(isHighFlow==0)) %>%
group_by(highFlowInterval) %>%
summarise(hoursHighFlow = n(), minDate = min(as.character(Date)),
maxDate = max(as.character(Date)))
??mutate
search()
detach(2)
library(dplyr)
temp <- df %>%
mutate(highFlowInterval = cumsum(isHighFlow==0)) %>%
group_by(highFlowInterval) %>%
summarise(hoursHighFlow = n(), minDate = min(as.character(Date)),
maxDate = max(as.character(Date)))
temp2 <- sqldf("SELECT *
FROM temp LEFT JOIN df
ON df.Date BETWEEN temp.minDate AND temp.maxDate")
??sqldf
dim(df)
head(df)
with(df, plot(Flow, isHighFlow))
head(Date)
head(temp)
class(Flow)
Flow>=1600
is.equal(isHighFlow, Flow>=1600)
all.equal(isHighFlow, Flow>=1600)
all.equal(isHighFlow, as.numeric(Flow>=1600))
cumsum(1:5)
cumsum(c(1, 1, 1, 0, 1, 1, 0, 1, 0))
cumsum(c(1, 0, 1, 1, 0, 1, 1, 1, 0))
data_set<- structure(list(Field = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L), .Label = c("LML6", "TZL2"), class = "factor"), Isopair = structure(c(1L,
1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L,
1L, 2L, 2L, 2L, 2L, 2L, 2L), .Label = c("Isopair-A", "Isopair-B"
), class = "factor"), STGgroup = structure(c(1L, 1L, 1L, 2L,
2L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L,
1L, 2L, 2L, 2L), .Label = c("Non-STG", "STG"), class = "factor"),
Rep = structure(c(1L, 2L, 3L, 1L, 2L, 3L, 1L, 2L, 3L, 1L,
2L, 3L, 1L, 2L, 3L, 1L, 2L, 3L, 1L, 2L, 3L, 1L, 2L, 3L), .Label = c("Rep1",
"Rep2", "Rep3"), class = "factor"), Trait1 = c(686L, 641L,
642L, 727L, 619L, 562L, 808L, 739L, 744L, 873L, 797L, 868L,
782L, 783L, 675L, 713L, 762L, 641L, 1009L, 995L, 845L, 1186L,
912L, 663L), Trait2 = c(45L, 65L, 70L, 35L, 20L, 80L, 70L,
65L, 70L, 20L, 30L, 35L, 40L, 55L, 35L, 40L, 35L, 40L, 40L,
35L, 25L, 40L, 35L, 25L)), .Names = c("Field", "Isopair",
"STGgroup", "Rep", "Trait1", "Trait2"), class = "data.frame", row.names = c(NA,
-24L))
library(agricolae)
funC<- function(trait_names){
by(data_set, data_set$Isopair,function(x){
mod<- aov(trait_names~ STGgroup*Field + Rep%in%Field, data=data_set)
out<-HSD.test(mod,"STGgroup",group=TRUE,console=TRUE)
dfout<- arrange(data.frame(out$groups),desc(trt))
})
}
Results:
##execute funC function for Trait1 & Trait2
funC(data_set$Trait1)
funC(data_set$Trait1)
??HSD.test
install.packages("agricolae")
library(agricolae)
funC(data_set$Trait1)
??arrange
library(dplyr)
funC(data_set$Trait1)
?by
funC(Trait1)
funC <- function(trait_names){
by(data_set, data_set$Isopair, function(x) {
mod <- aov(formula(paste(trait_names, "~ STGgroup*Field + Rep%in%Field")),
data=data_set)
out <- HSD.test(mod, "STGgroup", group=TRUE, console=TRUE)
dfout <- arrange(data.frame(out$groups), desc(trt))
})
}
funC("Trait1")
View(data_set)
funC <- function(trait_names){
by(data_set, data_set$Isopair, function(x) {
mod <- aov(formula(paste(trait_names, "~ STGgroup*Field + Rep%in%Field")),
data=x)
out <- HSD.test(mod, "STGgroup", group=TRUE, console=TRUE)
dfout <- arrange(data.frame(out$groups), desc(trt))
})
}
##execute funC function for Trait1 & Trait2
# funC(data_set$Trait1)
funC("Trait1")
funC <- function(trait_names){
by(data_set, data_set$Isopair, function(x) {
mod <- aov(trait_names ~ STGgroup*Field + Rep%in%Field, data=x)
out <- HSD.test(mod, "STGgroup", group=TRUE, console=TRUE)
dfout <- arrange(data.frame(out$groups), desc(trt))
})
}
funC(Trait1)
library(jvamisc)
cleanup()
cleanup
cleanup()
library(jvamisc)
cleanup()
pkgup("GLFC")
